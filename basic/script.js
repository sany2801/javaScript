// ### Quiz

// ```javascript
// const value1 = true + false;
// const value2 = 12 / '6';
// const value3 = 'number' + 15 + 3;
// const value4 = 15 + 3 + 'number';
// const value5 = 'foo' + +'bar';
// const value6 = 'true' == true;
// const value7 = false == 'false';
// const value8 = null == '';
// const value9 = !!'false' == !!'true';
// const value10 = [1] > null;
// const value11 = ['x'] == 'x';
// const value12 = [] + null + 1;
// const value13 = 0 || ('0' && {});
// const value14 = [1, 2, 3] == [1, 2, 3];
// const value15 = {} + [] + {} + [1];
// const value16 = !+[] + [] + ![];
// const value17 = new Date(0) - 0;
// const value18 = new Date(0) + 0;
// ```

// ###1
// Создать несколько любых элементов на странице. Найти их всех по классу. Вывести в консоль.

// ###2
// Создать несколько любых элементов на странице. Найти их всех по классу. Все элементы поместить в массив. 
// Вывести в консоль.


// ###3
// Создать инпут и кнопку. При нажатии на кнопку выводим в консоль значение инпута и очищаем его.
const button = document.querySelector('.button')
const input = document.querySelector('.input')
button.addEventListener("click", (event) =>{
    event.preventDefault();
    console.log('click')
    // input.innerHTML += "";
    // console.log(input.value)
})
// ###4
// Выводим на страницу любую разметку со значением инпута с помощью innerHTML.

// ###5
// Создать модальное окно с функциями открытия, закрытия. + вывести в окне информацию из инпута.

// ### 1

// Имеется три переменные

// ```javascript
//   a = 1,
//   b = 2,
//   c = " белых медведей".
// ```
// Сложите переменные так, чтобы в результате получилось выражение: "12 белых медведей".
let a = 1;
let b = 2;
let c = ' белых медведей'
console.log(`${a}${b}${c}`)

// ---

// ### 2

// С помощью диалогового окна prompt попросите пользователя ввести любое челое число.
//  После чего отобразите alert, говорящий четное или не четное это число.
const usernum = prompt('Введите число')
if(usernum % 2 === 0){
    alert(`число ${usernum} чётное`)
}else{
    alert(`число ${usernum} нечётное`)
}
// ---

// ### 3

// Написать функцию, которая будет высчитывать сумму чисел от нуля,
//  до параметра, который мы в неё передаем, 
//  например: getSum(100) должна передавать сумму чисел от 0 до 100 (должно получится 5050)
function sum (num){
let num0 = 0;
for(i = 0; i <= num; i++){
    num0 += i;
}
console.log(num0)
}
sum(100)
// ---

// ### 4

// Дана строка. Сделайте заглавным первый символ каждого слова этой строки.

let userstr = prompt('Введите любую строку', 'привет всем меня зовут джон')
let array = userstr.split(' ')
let newstr = []
for(i = 0; i < array.length; i++){
   newstr.push(array[i][0].toUpperCase() + array[i].slice(1))
}
alert(newstr.join(' '))
// ---

// ### 5

// Дана строка с пробелами по краям.
// Реализуйте функцию ltrim, которая будет убирать пробелы слева.
// Реализуйте функцию rtrim, которая будет убирать пробелы справа.
// Реализуйте функцию trim, которая будет убирать пробелы по концам строки.

// ---

// ### 6

// Написать функцию, которая принимает параметрами два массива и сливает их в объект так, что элементы первого массива становятся ключами, а второго - значениями.

// ---

// ### 7

// Дан массив вида [1, 2, 3, 4, 5, 6, 7, 8, 9]. Сделайте функцию, которая будет разбивать его в двухмерный массив. Первым параметром функция принимает массив для разбиения, а вторым - сколько элементов должно быть в подмассиве.
// Например, так

// ```javascript
// func([1, 2, 3, 4, 5, 6, 7, 8, 9], 3)[([1, 2, 3], [4, 5, 6], [7, 8, 9])]; // Мы получим
// ```

// ---

// ### 8

// Суммирование чисел в массиве
// Прим. есть массив чисел

// ```javascript
// var numbers = [10, 25, 100];
// ```

// Hа выходе должны получить переменную, в которой будет содержаться сумма этих чисел (135)
// Расширить функционал, так, чтобы скрипт игнорировал другие типы данных.

// ---

// ### 9

// Фильтр юзеров
// Создать массив объектов для юзеров.
// Прим.

// ```javascript
// [{name: ‘Ivan’, age: 18}, {name: ‘Petr’, age: 12}, {name: ‘Sidor’, age: 25}, {...}, ...]
// ```

// Написать скрипт, который будет на выходе отдавать два массива. Первый с совершеннолетними пользователями, второй с несовершеннолетними.

// ---

// ### 10

// Функция решения квадратного уравнения через дискриминант:

// ```
//   ax² + bx + c = 0 (общий вид уравнения)
//   D = b*2 – 4*a*c

//   D > 0
//   x1 = (-b + √D ) / 2a
//   x2 = (-b – √D ) / 2a
//   D = 0
//   x = -b / 2a
// ```

// ---

// ### 11

// Арифметический тренажер:

// -   пользователю выводится 10 примеров, которые содержат по 2 случайных положительных числа (от 1 до 10) и знак сложения или вычитания (рандомных)
// -   пользователь вводит ответы
// -   после 10 ответов выводится оценка и примеры, в которых была совершена ошибка (правильный ответ Х, а вы ввели У).
// -   Добавить в логику умножение и деление. При делении первый операнд должен быть от 1 до 100.

// ---

// ### 12

// -   Определите переменные str, num, flag и txt со значениями «Привет», 123, true, «true».
// -   При помощи оператора определения типа убедитесь, что переменных принадлежат типам: string, number, boolean.

// ---

// ### 13

// Создайте переменные a1, a2, a3, a4, a5. При помощи математических операторов найдите значения выражений:

// ```javascript
// (5 + 3) * (5 - 3), (10 - 6) * 200, (534 * 132) / 18, 123 * 3 + 10, 12 * 13 * 14;
// ```

// -   Поместив результат каждого выражения в соответствующую переменную.
// -   Вывести все результаты через запятую используя alert или console.log

// ---

// ### 14

// Напишите скрипт, который находит площадь прямоугольника c высота 43см и шириной 27см
// значение площади должно хранится в числовой переменной s.

// ---

// ### 15

// У прямоугольного треугольника две стороны n (со значением 3) и m (со значением 4).
// Найдите гипотенузу k по теореме Пифагора.

// ---

// ### 16

// -   Даны размер кредита — 1 тыс.бел.руб,
// -   процентная ставка — 10%,
// -   количество лет — 5.
// -   Найти переплату по кредиту.

// ---

// ### 17

// -   Напишите скрипт, который считает количество секунд в неделе и показывает это количество в модальном окне.
// -   Сообщение в модальном окне должно быть таким: 'Сегодня (здесь вставить день выполнения задания) и узнал что колиство секунд одной неделе составляет (высчитанное количество)''

// ---

// ### 18

// -   Создайте переменные a=10, b=2 и c=5. Выведите на экран и в консоль их сумму.

// ---

// ### 19

// -   Создайте переменную age и присвойте ей ваш возраст.
// -   Выведите на экран 'Мне %Возраст% лет!'

// ---

// ### 20

// -   Создайте три переменные - час, минута, секунда. С их помощью выведите на экран время выполнения задания
//     в формате 'час:минута:секунда'.

// ---

// ### 21

// -   Переделайте этот код так, чтобы в нем использовались операции ++ и --.
// -   Количество строк кода при этом не должно измениться.

// ```javascript
// let num = 10;
// num = num + 1;
// num = num + 1;
// num = num - 1;
// alert(num);
// ```

// ---

// ### 22

// -   Создайте переменные a6, a7, a8, a9, a10. Поместите в них результат выражений:

// ```
//   5 % 3,
//   3 % 5,
//   5 + '3',
//   '5' - 3,
//   75 + 'кг'
// ```

// -   Вывести все результаты через запятую используя alert или console.log

// ---

// ### 23

// -   Напишите программу, которая сравнит 2 числа и выведет в алерт наименьшее.

// ---

// ### 24

// -   Создайте три переменные a1, a2, a3 и положите в них числа (желательно использовать
// -   как положительные так и отрицательные числа). Используя условные операторы
//     найдите знаки этих чисел (это может быть - или ничего).
// -   Результат должен быть выведен через alert, который содержит сообщение
// -   следующего вида: Знаки чисел a1, a2, a3: -, ,- (например a1 = -14, a2 = 10, a3 = -12);

// ---

// ### 25

// -   Создайте 5 чисел и найдите наибольшее при помощи условий

// ---

// ### 26

// -   Создать объект пользователя интернет магазина,
// -   объект должен содержать следущие поля: имя, email, нравятся ли ему фрукты, показатель IQ.
// -   Созданный объект вывести в консоли.

// ---

// ### 27

// -   Создайте объект дерево у которого есть следующие свойства:
//     -   название,
//     -   высота,
//     -   количество листьев,
//     -   семейство.

// *   Необходимо вывести в консоль объект, а затем "укоротить" дерево, и вывести в консоль.
// *   Подсказка: посмотреть операторы += -=

// ---

// ### 28

// -   Напишите цикл от 0 до 15. И в каждой итерации цикла нужно проверить четное число или нечетное.
// -   И вывести в консоли, результат будет выглядеть примерно так:
// -   0 это четное
// -   1 это нечетное

// ---

// ### 29

// -   У нас есть студентов: Вася, Зина, Катя, Петя, Вова. Они решали финальный тест

//     -   и процент выполнения теста таков: Вася - 80, Зина - 77, Катя - 88, Петя - 95, Вова - 57.

//     *   Оценки рассчитываются следующим образом:
//         -   если процент > 90 - 5
//         -   если процент > 80 - 4
//         -   если процент > 70 - 3
//         -   если процент > 60 - 2

//     -   Ответ вывести следующим образом:

//     ```
//       Вася - 2,
//       Зина - 3
//        ...
//     ```

// ---

// ### 30

// -   Написать цикл, который будет итерироватся от 1 до 100.
// -   На каждой итерации цикла нужно проверить:
// -   если число кратное 3 - то вывести в консоль строку Fizz,
// -   если число кратное 5 - то вывести в консоль строку Buzz,
// -   если число кратное и 3 и 5 - то вывести FizzBuzz

// ---

// ### 31

// -   Нарисовать прямоугольный треугольник с длинной катетов i (любое число больше 1).
//     Для рисования использовать символ \*(звездочка) или %(знак процента) и консоль.

// ---

// ### 322

// -   Написать цикл от 0 до 1000. Высчитать сумму всех чисел кратных 4 и сумму всех чисел кратных 3.

// ---

// ### 33

// -   Написать программу, которая найдет наибольший общий делитель двух целых чисел и вывести это число в alert.

// ---

// ### 34

// -   Создайте массив из 5 любых элементов.
//     -   Напишите программу, которая будет клонировать заданный массив, не изменяя оригинала.
//     -   Склонированный массив вывести в консоль

// ---

// ### 35

// -   Спросить у пользователя возраст
// -   Спросить у пользователя пол(через диалог confirm)
// -   Если возраст старше 60 и пол мужской, то вывести в консоль - вы дедушка
// -   Если возраст от 20 до 60 и пол мужской, то вывести в консоль - вы мужчина
// -   если возраст от 12 до 20 и пол мужской - вы юноша
// -   младше 12 и пол мужской - вы мальчик

// -   такой же алгоритм для женщин(бабушка, женщина, девушка, девочка)

// ---

// ### 36

// -   Написать программу, которая будет выводить в консоль лесенку

//     ```
//         #
//         ##
//         ###
//         ####
//         #####
//         ######
//     ```

// ---

// ### 37

// -   написать ф-цию, которая принимает в качестве параметра массив чисел, фильтрует его и возвращает массив нечетных чисел [1, 2, 3] -> [1, 3]
// -   написать ф-цию, которая принимает в качестве параметра массив чисел и возвращает массив их квадратов // [1, 2, 3, 4] -> [1, 4, 9, 16]
// -   написать функцию, которая в качестве параметра принимает массив с разными типами данных. возвращает true, если в массиве есть строка, возвращает false, если в массиве строк нет

// ---

// ### 38

// -   запрашивает у пользователя число от 1 до 10
// -   генерирует рандомное число от 1 до 10(именно целое число, чтобы без десятых, сотых и т.д.)
// -   выводит в алерт юзеру сообщение о том, что он угадал число, если числа совпали. и, соответственно - нет, если не угадали

// требования к выполнению этой задачи:

// -   генерирование числа должно быть написать в функции - getRandomNumber
// -   сравнение числа введенного юзера и сгенерированное программой должно происходить в функции - areNumbersEqual
// -   функции getRandomNumber и areNumbersEqual должны быть описаны в отдельном от основной программы файле
// -   если юзер ввел некорректно число (> 10, или какую-нибудь строку) - сказать ему об этом и предложить сыграть еще раз

// ---

// ### 39

// -   Написать ф-цию, которая принимает массив объектов типа {name: 'Jonh', age: 20}
// -   и возвращает массив значений лежащих в поле age

// ```javascript
// function getAges(array) {}

// getAges([
//     { name: 'Sergey', age: 33 },
//     { name: 'Daria', age: 33 },
// ]); // => [33, 33]
// ```

// ---

// ### 40

// -   Написать ф-цию, которая принимает массив объектов типа {name: 'Jonh', age: 20}
// -   и вторым параметром ключ, по которому надо собрать массив

// ```javascript
// function getAges(array, key) {}

// getAges(
//     [
//         { name: 'Sergey', age: 33 },
//         { name: 'Daria', age: 33 },
//     ],
//     'name'
// ); // => ['Sergey', 'Daria']

// getAges(
//     [
//         { name: 'Sergey', age: 33 },
//         { name: 'Daria', age: 33 },
//     ],
//     'age'
// ); // => [33, 33]
// ```

// ---

// ### 41

// -   Написать ф-цию, которая принимает объект и меняет местами ключи и значения

// ```javascript
// function convertObject(obj) {}

// convertObject({ a: 'b', c: 'd' }); // => { b: 'a', d: 'c' }
// ```

// ---

// ### 42

// -   Написать ф-цию, которая принимает объект, где в качестве значений - числа
// -   Ф-ция должна проверить, есть ли среди значений четные числа и вернуть true/false

// ```javascript
// function isEvenValue(obj) {}

// isEvenValue({ x: 1, y: 2 }); // => true
// isEvenValue({ x: 1, y: 1 }); // => false
// ```

// ---

// ### 43

// -   Переписать ф-цию так, чтобы она работала с массивом т.е. значения input.value должны лежать в массиве
// -   Логика должна остаться той же: возвращает true, если во всех инпутах есть значения

// ```javascript
// function areInputsNotEmpty() {
//     return (
//         userNameInput.value.length &&
//         lastNameInput.value.length &&
//         ageInput.value.length
//     );
// }
// ```

// ---

// ### 44

// -   Написать ф-цию, которая принимает массив объектов.
// -   Значения этих объектов - числа. Вернуть объект с суммами ключей

// ```javascript
// function calculate(array) {}

// calculate([
//     { x: 1, z: 2, y: 3 },
//     { x: 10, z: 21, y: 4 },
//     { x: 2, z: 3, y: 4 },
//     { a: 1, b: 2 },
// ]);
// // => { x: 13, z: 26, y: 11, a: 1, b: 2 }
// ```

// ---

// ### 45

// -   Необходимо создать массив из 15 элементов. В массиве обязательно должны быть одинаковые значения.
// -   Напишите код, который уберет эти дубликаты из созданного массива.

// ---

// ### 46

// -   Создайте 2 массива с разной длинной.
// -   Необходимо написать код,который создаёт массив элементов представляющих собой сумму
// -   соответствующих элементов заданных массивов.

// ---

// ### 47

// -   Напишите код, который подсчитает количество повторяющихся элементов в массиве.
// -   И вывести это количество в консоль.

// ---

// ### 48

// -   Напишите код, который разворачивает исходный массив и сохраняет это в новую переменную.
// -   Например: исходный массив - [1, 2, 3], результирующий массив - [3, 2, 1]

// ---

// ### 49

// -   Напишите код, который проверит является строка полиндромом(слово, которое с обеих сторон читается одинаково, например РЕПЕР, ШАЛАШ)

// ---

// ### 50

// -   Написать код, который заменит регистр каждого символа на противоположный.
// -   Например 'Hello world' -> 'hELLO WORLD'

// ---

// ### 51

// -   Создайте 2 массива с разной длинной.
// -   Необходимо написать код,который создаёт массив элементов представляющих собой разность
// -   соответствующих элементов заданных массивов.

// ---

// ### 52

// -   Напишите код, который добавит символ двоеточие(':') между нечетными числами.
// -   Например, число 556 результат должен быть '5:56', 566 -> 566, 655 -> 65:5

// ---

// ### 53

// -   Создать массив из 20 чисел. Необходимо высчитать сумму всех элементов.(Используем reduce)

// ---

// ## 54

// -   Написать сортировку пyзырьком, от большего значения к меньшему.

// ---

// ### 55

// -   Создать массив из 10 чисел. Необходимо создать новый массив, в котором числа будут возведены в квадрат.
// -   Например:
//     ```javascript
//         [1,2,3] -> [1,4,9].
//     ```

// ---

// ### 56

// -   Создать массив объектов с полями: имя, пол. Разделить этот массив на 2 массива (женский и мужской).
// -   Использовать reduce.

// ---

// ### 57

// -   Написать функцию, которая принимает первым аргументом массив,
// -   а вторым любое значение, функция должна вернуть индекс если такое значение есть в массиве и -1 если его нет.
// -   (indexOf, findIndex не использовать)

// ---

// ### 58

// -   Написать функцию, которая принимает массив из чисел, а возвращает отсортированный массив.
// -   Для сортировки можно использовать метод sort, но еще лучше будет если попробовать написать свою сортировку.

// ---

// ### 59

// -   Написать функцию, которая принимает любое количество чисел(не массив)и возвращает их сумму.

// ---

// ### 60

// -   Написать функцию, которая принимает первым аргументом условие,
// -   вторым и третьим аргументом функции(функции могут делать все что угодно на ваш выбор).
// -   Внутри если условие равно true, то выполнить первую функцию, если false, то выполнить вторую функцию.

// ---

// ### 61

// -   Написать функцию сравнения двух массивов, которая возвращает true или false в зависимости от того,
// -   одинаковые у них элементы или нет.

// ---

// ### 62

// -   Написать функцию, которая будет возвращать количество вызовов этой функции в квадрате.
// -   (Использовать замыкание)

// ---

// ### 63

// -   Написать функцию, которая выводит количество миллисекунд с начала дня. За начало дня принимаем текущую дату и время 00:00.

// ---

// ### 64

// -   Написать функцию, которая будет принимать число (дефолтное значение 2021) и вычисляет сумму цифр из которых состоит число.
// -   Для 2021 это будет 5.

// ---

// ### 65

// -   Описание задачи: Напишите функцию, которая разделит массив на части заданного размера и
// -   вернет массив элементами которого являются эти части.
// -   Пример функции:
//     ```javascript
//         splitArray([1, 2, 3, 4, 5], 2) => [[1, 2], [3, 4], [5]]
//     ```

// ---

// ### 67

// -   Напишите функцию, которая очищает массив от нежелательных значений,
// -   таких как false, undefined, пустые строки, 0, null.

// ---

// ### 68

// -   Напишите функцию, которая принимает сколько угодное количество массивов и возвращает массив состоящий из === Пример:

//     ```javascript
//     createArrayWithUniq([1, 2], [2, 3], [2, 5]) => [2]
//     createArrayWithUniq([1, 2, 3], [2, 3], [2, 3, 5]) => [2, 3]
//     createArrayWithUniq([1, 3], [2, 3], [2, 3, 5]) => [3]
//     ```

// ---

// ### 69

// -   Написать функцию, которая вычислит минимальное значени всех аргументов функции и вернет это значение.
// -   (Math.min использовать нельзя :-) )

// ---

// ### 70

// -   Сделать функцию, которая вычисляет разность между двумя числами и вернет разность.
// -   Выполнить используя замыкание, результат должен выглядеть примерно так
//     ```javascript
//     let sub = substract(a)(b); // a - b
//     ```

// ---

// ### 71

// -   Создайте замыкание: функция makePassword получает пароль в аргументе и возвращает
// -   внутреннюю функцию, которая принимает введенную строку и возвращает булево значение true,
// -   если введенная строка совпадает с паролем и false – если не совпадает.
// -   Пример выполнения функции:
//     ```javascript
//     let checkPassword = makePassword('somePassword'); //задаем пороль
//     checkPassword('password'); // возвращает false
//     checkPassword('somePassword');
//     ```

// ---

// ### 72

// -   Написать функцию, которая приобразуем любую строку в строку написанную кебаб кейсом (все буквы с маленькой буквы и на месте пробелов - тире)
// -   Например:
// -   'Hello World' -> 'hello-world';
// -   'Hello dear hell' -> 'hello-dear-hell'

// ---

// ### 73

// -   Написать функцию, которая из любой фразы сделает вернет ее абревиатуру.
// -   'Республика беларусь' -> 'РБ'
// -   'Минск' -> 'М'

// ---